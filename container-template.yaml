apiVersion: apps/v1
kind: Deployment
metadata:
  name: CONTAINER_NAME
  labels:
    app: CONTAINER_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app: CONTAINER_NAME
  template:
    metadata:
      labels:
        app: CONTAINER_NAME
    spec:
      containers:
      - name: CONTAINER_NAME
        image: superhero-api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          value: "HOST_VALUE"
        - name: DB_PORT
          value: "PORT_VALUE"
        - name: DB_NAME
          value: "NAME_VALUE"
        - name: DB_USER
          value: "USER_VALUE"
        - name: DB_PASSWORD
          value: "PASSWORD_VALUE"
        - name: DB_USERNAME
          value: "USERNAME_VALUE"
        - name: DB_PASSWORD_USER
          value: "PASSWORD_USER_VALUE"
---
apiVersion: v1
kind: Service
metadata:
  name: CONTAINER_NAME
  namespace: default
spec:
  selector:
    app: CONTAINER_NAME
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: CONTAINER_NAME-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /server$1
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  rules:
  - http:
      paths:
      - path: /CONTAINER_NAME(/.*) 
        pathType: ImplementationSpecific
        backend:
          service:
            name: CONTAINER_NAME
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: CONTAINER_NAME-nodeport
  namespace: default
spec:
  selector:
    app: CONTAINER_NAME
  ports:
  - port: 80
    targetPort: 8080
    # Use a port in the NodePort range (30000-32767)
    # You'll need to pick a unique port for each container
    nodePort: 3XXXX
  type: NodePort 