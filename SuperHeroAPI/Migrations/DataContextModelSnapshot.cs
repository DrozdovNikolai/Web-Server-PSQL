// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PostgreSQL.Data;

#nullable disable

namespace SuperHeroAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SuperHeroAPI.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PermissionId"));

                    b.Property<int>("Operation")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.Models.SuperHero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SuperHeroes", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("attendance_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AttendanceId"));

                    b.Property<DateOnly?>("AtDate")
                        .HasColumnType("date")
                        .HasColumnName("at_date");

                    b.Property<int?>("AtStudentId")
                        .HasColumnType("integer")
                        .HasColumnName("at_student_id");

                    b.Property<int?>("AtTegrsuId")
                        .HasColumnType("integer")
                        .HasColumnName("at_tegrsu_id");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("AttendanceId")
                        .HasName("attendances_pkey");

                    b.ToTable("attendances", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.AuditTableStudent", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("audit_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AuditId"));

                    b.Property<int?>("Course")
                        .HasColumnType("integer")
                        .HasColumnName("course");

                    b.Property<int?>("CourseWorkId")
                        .HasColumnType("integer")
                        .HasColumnName("course_work_id");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<DateOnly?>("EnrolledDate")
                        .HasColumnType("date")
                        .HasColumnName("enrolled_date");

                    b.Property<string>("EnrollmentOrder")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("enrollment_order");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("first_name");

                    b.Property<char?>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("gender");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<string>("Inn")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("INN");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("last_name");

                    b.Property<char?>("Operation")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("operation");

                    b.Property<string>("PassportSeriesAndNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("passport_series_and_number");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("patronymic");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("place_of_birth");

                    b.Property<string>("Snils")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("SNILS");

                    b.Property<int?>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    b.Property<string>("StudentLogin")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("student_login");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("AuditId")
                        .HasName("audit_table_students_pkey");

                    b.ToTable("audit_table_students", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Auditorium", b =>
                {
                    b.Property<int>("AudId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("aud_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AudId"));

                    b.Property<int?>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("number");

                    b.Property<string>("Type")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("type");

                    b.HasKey("AudId")
                        .HasName("auditorium_pkey");

                    b.ToTable("auditorium", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("CertDate")
                        .HasColumnType("date")
                        .HasColumnName("cert_date");

                    b.Property<string>("ContrNumber")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("contr_number");

                    b.Property<DateOnly?>("DateEnroll")
                        .HasColumnType("date")
                        .HasColumnName("date_enroll");

                    b.Property<DateOnly?>("DateKick")
                        .HasColumnType("date")
                        .HasColumnName("date_kick");

                    b.Property<int?>("GroupToMove")
                        .HasColumnType("integer")
                        .HasColumnName("group_to_move");

                    b.Property<int?>("ListenedHours")
                        .HasColumnType("integer")
                        .HasColumnName("listened_hours");

                    b.Property<int?>("ListenerId")
                        .HasColumnType("integer")
                        .HasColumnName("listener_id");

                    b.Property<int?>("PayerId")
                        .HasColumnType("integer")
                        .HasColumnName("payer_id");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("integer")
                        .HasColumnName("program_id");

                    b.HasKey("Id")
                        .HasName("contracts_pkey");

                    b.HasIndex("GroupToMove");

                    b.HasIndex("ListenerId");

                    b.ToTable("contracts", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("course_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Course1")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("course");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.HasKey("CourseId")
                        .HasName("courses_pkey");

                    b.ToTable("courses", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.CourseWork", b =>
                {
                    b.Property<int>("CourseWorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("course_work_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CourseWorkId"));

                    b.Property<int?>("CourseWorkKafedra")
                        .HasColumnType("integer")
                        .HasColumnName("course_work_kafedra");

                    b.Property<int?>("CourseWorkOcenka")
                        .HasColumnType("integer")
                        .HasColumnName("course_work_ocenka");

                    b.Property<int?>("CourseWorkStudentId")
                        .HasColumnType("integer")
                        .HasColumnName("course_work_student_id");

                    b.Property<int?>("CourseWorkTeacherId")
                        .HasColumnType("integer")
                        .HasColumnName("course_work_teacher_id");

                    b.Property<string>("CourseWorkTheme")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("course_work_theme");

                    b.Property<bool?>("CourseWorkVipysk")
                        .HasColumnType("boolean")
                        .HasColumnName("course_work_vipysk");

                    b.Property<int?>("CourseWorkYear")
                        .HasColumnType("integer")
                        .HasColumnName("course_work_year");

                    b.HasKey("CourseWorkId")
                        .HasName("course_work_pkey");

                    b.HasIndex("CourseWorkKafedra");

                    b.HasIndex("CourseWorkStudentId");

                    b.HasIndex("CourseWorkTeacherId");

                    b.ToTable("course_work", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Day", b =>
                {
                    b.Property<int>("DayId")
                        .HasColumnType("integer")
                        .HasColumnName("day_id");

                    b.Property<string>("Dayofweek")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("dayofweek");

                    b.HasKey("DayId")
                        .HasName("day_pkey");

                    b.ToTable("days", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Departament", b =>
                {
                    b.Property<int>("DepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dep_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepId"));

                    b.Property<string>("DepAbb")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("dep_abb");

                    b.Property<string>("DepName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("dep_name");

                    b.HasKey("DepId")
                        .HasName("departaments_pkey");

                    b.ToTable("departaments", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Direction", b =>
                {
                    b.Property<int>("DirId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dir_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DirId"));

                    b.Property<string>("DirCode")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("dir_code");

                    b.Property<string>("DirName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("dir_name");

                    b.Property<bool?>("Magister")
                        .HasColumnType("boolean")
                        .HasColumnName("magister");

                    b.HasKey("DirId")
                        .HasName("directions_pkey");

                    b.ToTable("directions", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Discipline", b =>
                {
                    b.Property<int>("DisciplinesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("disciplines_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("DisciplinesId"));

                    b.Property<string>("DisciplineName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("discipline_name");

                    b.Property<int>("GroupNumber")
                        .HasColumnType("integer")
                        .HasColumnName("group_number");

                    b.HasKey("DisciplinesId")
                        .HasName("disciplines_pkey");

                    b.ToTable("disciplines", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.ForSchedLec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Dep")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("dep");

                    b.Property<string>("Disc")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("disc");

                    b.Property<string>("Fac")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("fac");

                    b.Property<string>("Fio")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("fio");

                    b.Property<int?>("Kurs")
                        .HasColumnType("integer")
                        .HasColumnName("kurs");

                    b.Property<decimal?>("LecH")
                        .HasColumnType("numeric")
                        .HasColumnName("lec_h");

                    b.Property<string>("Napr")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("napr");

                    b.Property<int?>("NumberOfGroups")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_groups");

                    b.Property<int?>("NumberOfStreams")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_streams");

                    b.Property<int?>("NumberOfSubgroups")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_subgroups");

                    b.HasKey("Id")
                        .HasName("for_sched_lec_pkey");

                    b.ToTable("for_sched_lec", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.ForSchedPrac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Dep")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("dep");

                    b.Property<string>("Disc")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("disc");

                    b.Property<string>("DisplayAudit")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("display_audit");

                    b.Property<string>("Fac")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("fac");

                    b.Property<string>("Fio")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("fio");

                    b.Property<int?>("Kurs")
                        .HasColumnType("integer")
                        .HasColumnName("kurs");

                    b.Property<string>("Napr")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("napr");

                    b.Property<int?>("NumberOfSubgroups")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_subgroups");

                    b.HasKey("Id")
                        .HasName("for_sched_prac_pkey");

                    b.ToTable("for_sched_prac", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("grade_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GradeId"));

                    b.Property<DateOnly?>("GrDate")
                        .HasColumnType("date")
                        .HasColumnName("gr_date");

                    b.Property<int?>("GrStudentId")
                        .HasColumnType("integer")
                        .HasColumnName("gr_student_id");

                    b.Property<int?>("GrTegrsuId")
                        .HasColumnType("integer")
                        .HasColumnName("gr_tegrsu_id");

                    b.Property<int?>("Grade1")
                        .HasColumnType("integer")
                        .HasColumnName("grade");

                    b.HasKey("GradeId")
                        .HasName("grades_pkey");

                    b.ToTable("grades", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GroupId"));

                    b.Property<int?>("Course")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("course")
                        .HasDefaultValueSql("1");

                    b.Property<int?>("GroupDirId")
                        .HasColumnType("integer")
                        .HasColumnName("group_dir_id");

                    b.Property<string>("GroupNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("group_number");

                    b.Property<int?>("GroupProfId")
                        .HasColumnType("integer")
                        .HasColumnName("group_prof_id");

                    b.Property<bool?>("Magister")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("magister")
                        .HasDefaultValueSql("false");

                    b.HasKey("GroupId")
                        .HasName("groups_pkey");

                    b.HasIndex("GroupDirId");

                    b.HasIndex("GroupProfId");

                    b.ToTable("groups", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Journal", b =>
                {
                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("Grade")
                        .HasColumnType("integer")
                        .HasColumnName("grade");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<int>("JId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("j_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JId"));

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("status");

                    b.Property<int?>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("integer")
                        .HasColumnName("subject_id");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("integer")
                        .HasColumnName("teacher_id");

                    b.ToTable("journal", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.KursVkr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Dep")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("dep");

                    b.Property<string>("Fac")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("fac");

                    b.Property<string>("Form")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("form");

                    b.Property<int?>("Kurs")
                        .HasColumnType("integer")
                        .HasColumnName("kurs");

                    b.Property<string>("Napr")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("napr");

                    b.Property<string>("StFio")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("st_fio");

                    b.Property<string>("TeachFio")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("teach_fio");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("type");

                    b.Property<string>("Years")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("years");

                    b.HasKey("Id")
                        .HasName("kurs_VKR_pkey");

                    b.ToTable("kurs_VKR", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.LGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<TimeOnly?>("Endtime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("endtime");

                    b.Property<string>("GroupNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("group_number");

                    b.Property<int?>("GroupProgramId")
                        .HasColumnType("integer")
                        .HasColumnName("group_program_id");

                    b.Property<int?>("Hours")
                        .HasColumnType("integer")
                        .HasColumnName("hours");

                    b.Property<int?>("PeopleCount")
                        .HasColumnType("integer")
                        .HasColumnName("people_count");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<TimeOnly?>("Starttime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("starttime");

                    b.HasKey("Id")
                        .HasName("l_groups_pkey");

                    b.ToTable("l_groups", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.LGroupsDay", b =>
                {
                    b.Property<int>("LGroupsDaysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("l_groups_days_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("LGroupsDaysId"));

                    b.Property<int?>("DayId")
                        .HasColumnType("integer")
                        .HasColumnName("day_id");

                    b.Property<TimeOnly?>("Endtime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("endtime");

                    b.Property<int?>("LGroups")
                        .HasColumnType("integer")
                        .HasColumnName("l_groups");

                    b.Property<TimeOnly?>("Starttime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("starttime");

                    b.HasKey("LGroupsDaysId")
                        .HasName("l_groups_days");

                    b.HasIndex("LGroups");

                    b.ToTable("l_groups_day", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.LWishDay", b =>
                {
                    b.Property<int>("LWishDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("l_wish_day_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("LWishDayId"));

                    b.Property<int?>("DayId")
                        .HasColumnType("integer")
                        .HasColumnName("day_id");

                    b.Property<TimeOnly?>("Endtime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("endtime");

                    b.Property<int?>("ListenerId")
                        .HasColumnType("integer")
                        .HasColumnName("listener_id");

                    b.Property<TimeOnly?>("Starttime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("starttime");

                    b.HasKey("LWishDayId")
                        .HasName("l_wish_day");

                    b.ToTable("l_wish_days", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Listener", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("department_code");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<DateOnly?>("IssueDate")
                        .HasColumnType("date")
                        .HasColumnName("issue_date");

                    b.Property<string>("IssuedBy")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("issued_by");

                    b.Property<string>("Lastname")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("lastname");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Passport")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("passport");

                    b.Property<int?>("PayerId")
                        .HasColumnType("integer")
                        .HasColumnName("payer_id");

                    b.Property<int?>("PeopleCount")
                        .HasColumnType("integer")
                        .HasColumnName("people_count");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("RegistrationAddress")
                        .HasColumnType("text")
                        .HasColumnName("registration_address");

                    b.Property<string>("Snils")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("snils");

                    b.Property<string>("Surname")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("listeners_pkey");

                    b.ToTable("listeners", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.ListenerWish", b =>
                {
                    b.Property<int>("WishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("wish_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WishId"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<int?>("Hours")
                        .HasColumnType("integer")
                        .HasColumnName("hours");

                    b.Property<int?>("ListenerId")
                        .HasColumnType("integer")
                        .HasColumnName("listener_id");

                    b.Property<int?>("PeopleCount")
                        .HasColumnType("integer")
                        .HasColumnName("people_count");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<int[]>("SuitableDays")
                        .HasColumnType("integer[]")
                        .HasColumnName("suitable_days");

                    b.Property<string>("WishDescription")
                        .HasColumnType("text")
                        .HasColumnName("wish_description");

                    b.HasKey("WishId")
                        .HasName("listener_wishes_pkey");

                    b.ToTable("listener_wishes", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.PayGraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AllSum")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("all_sum");

                    b.Property<string>("Bank")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("bank");

                    b.Property<int?>("ContractId")
                        .HasColumnType("integer")
                        .HasColumnName("contract_id");

                    b.Property<DateOnly?>("Date40")
                        .HasColumnType("date")
                        .HasColumnName("date_40");

                    b.Property<decimal?>("DepositedAmount")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("deposited_amount")
                        .HasDefaultValueSql("0.00");

                    b.Property<DateOnly?>("ExpirationDate")
                        .HasColumnType("date")
                        .HasColumnName("expiration_date");

                    b.Property<decimal?>("LeftToPay")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("left_to_pay");

                    b.HasKey("Id")
                        .HasName("pay_graph_pkey");

                    b.ToTable("pay_graph", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Payer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("department_code");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<DateOnly?>("IssueDate")
                        .HasColumnType("date")
                        .HasColumnName("issue_date");

                    b.Property<string>("IssuedBy")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("issued_by");

                    b.Property<string>("Lastname")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("lastname");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Passport")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("passport");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("RegistrationAddress")
                        .HasColumnType("text")
                        .HasColumnName("registration_address");

                    b.Property<string>("Snils")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("snils");

                    b.Property<string>("Surname")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("payers_pkey");

                    b.ToTable("payers", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("position_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PositionId"));

                    b.Property<string>("PosName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("pos_name");

                    b.HasKey("PositionId")
                        .HasName("positions_pkey");

                    b.ToTable("positions", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Profile", b =>
                {
                    b.Property<int>("ProfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prof_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProfId"));

                    b.Property<int?>("ProfDirId")
                        .HasColumnType("integer")
                        .HasColumnName("prof_dir_id");

                    b.Property<string>("ProfName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("prof_name");

                    b.HasKey("ProfId")
                        .HasName("profiles_pkey");

                    b.HasIndex("ProfDirId");

                    b.ToTable("profiles", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Program_u", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("Hours")
                        .HasColumnType("integer");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("RequiredAmount")
                        .HasColumnType("numeric");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("programs", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("schedule_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ScheduleId"));

                    b.Property<int>("AudId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("aud_id");

                    b.Property<int?>("DayId")
                        .HasColumnType("integer")
                        .HasColumnName("day_id");

                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("subject_id");

                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("teacher_id");

                    b.Property<string>("Timerange")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("timerange");

                    b.HasKey("ScheduleId")
                        .HasName("schedule_pkey");

                    b.HasIndex("AudId");

                    b.HasIndex("DayId");

                    b.HasIndex("GroupId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("schedule", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StudentId"));

                    b.Property<int?>("Course")
                        .HasColumnType("integer")
                        .HasColumnName("course");

                    b.Property<int?>("CourseWorkId")
                        .HasColumnType("integer")
                        .HasColumnName("course_work_id");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<DateOnly?>("EnrolledDate")
                        .HasColumnType("date")
                        .HasColumnName("enrolled_date");

                    b.Property<string>("EnrollmentOrder")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("enrollment_order");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("gender");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<string>("Inn")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("INN");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("last_name");

                    b.Property<string>("PassportSeriesAndNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("passport_series_and_number");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("patronymic");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("PhoneNumberRod")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("phone_number_rod");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("place_of_birth");

                    b.Property<string>("Snils")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("SNILS");

                    b.Property<string>("StudentLogin")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("student_login");

                    b.Property<string>("Subgroup")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("subgroup");

                    b.Property<string>("ZachetkaNumber")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("zachetka_number");

                    b.HasKey("StudentId")
                        .HasName("students_pkey");

                    b.HasIndex("GroupId");

                    b.ToTable("students", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("subject_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("SubType")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sub_type");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("subject_name");

                    b.HasKey("SubjectId")
                        .HasName("subjects_pkey");

                    b.ToTable("subjects", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.TeachGruz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeNapr")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("code_napr");

                    b.Property<decimal?>("ConsultH")
                        .HasColumnType("numeric")
                        .HasColumnName("consult_h");

                    b.Property<decimal?>("ControlH")
                        .HasColumnType("numeric")
                        .HasColumnName("control_h");

                    b.Property<string>("DisName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("dis_name");

                    b.Property<decimal?>("ExamH")
                        .HasColumnType("numeric")
                        .HasColumnName("exam_h");

                    b.Property<string>("Fam")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("fam");

                    b.Property<decimal?>("GekH")
                        .HasColumnType("numeric")
                        .HasColumnName("GEK_h");

                    b.Property<int?>("KontBudg")
                        .HasColumnType("integer")
                        .HasColumnName("kont_budg");

                    b.Property<int?>("KontDog")
                        .HasColumnType("integer")
                        .HasColumnName("kont_dog");

                    b.Property<int?>("Kurs")
                        .HasColumnType("integer")
                        .HasColumnName("kurs");

                    b.Property<decimal?>("KursachH")
                        .HasColumnType("numeric")
                        .HasColumnName("kursach_h");

                    b.Property<decimal?>("LabH")
                        .HasColumnType("numeric")
                        .HasColumnName("lab_h");

                    b.Property<decimal?>("LecH")
                        .HasColumnType("numeric")
                        .HasColumnName("lec_h");

                    b.Property<decimal?>("MagistrH")
                        .HasColumnType("numeric")
                        .HasColumnName("magistr_h");

                    b.Property<decimal?>("ManageH")
                        .HasColumnType("numeric")
                        .HasColumnName("manage_h");

                    b.Property<int?>("NumberOfGroups")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_groups");

                    b.Property<int?>("NumberOfStreams")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_streams");

                    b.Property<int?>("NumberOfSubgroups")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_subgroups");

                    b.Property<decimal?>("OtherH")
                        .HasColumnType("numeric")
                        .HasColumnName("other_h");

                    b.Property<decimal?>("PracticeH")
                        .HasColumnType("numeric")
                        .HasColumnName("practice_h");

                    b.Property<int?>("Semestr")
                        .HasColumnType("integer")
                        .HasColumnName("semestr");

                    b.Property<decimal?>("SeminarH")
                        .HasColumnType("numeric")
                        .HasColumnName("seminar_h");

                    b.Property<decimal?>("VkrH")
                        .HasColumnType("numeric")
                        .HasColumnName("VKR_h");

                    b.Property<decimal?>("ZachetH")
                        .HasColumnType("numeric")
                        .HasColumnName("zachet_h");

                    b.HasKey("Id")
                        .HasName("teach_gruz_pkey");

                    b.ToTable("teach_gruz", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("teacher_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("patronymic");

                    b.HasKey("TeacherId")
                        .HasName("teachers_pkey");

                    b.ToTable("teachers", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Teachschedule", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("lesson_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LessonId"));

                    b.Property<int?>("DayId")
                        .HasColumnType("integer")
                        .HasColumnName("day_id");

                    b.Property<string>("Time")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("time");

                    b.Property<int>("WlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("wl_id");

                    b.HasKey("LessonId")
                        .HasName("teachschedule_pkey");

                    b.HasIndex("DayId");

                    b.HasIndex("WlId");

                    b.ToTable("teachschedule", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Tegrsu", b =>
                {
                    b.Property<int>("TegrsuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tegrsu_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TegrsuId"));

                    b.Property<int?>("TegrsuGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("tegrsu_group_id");

                    b.Property<int?>("TegrsuSubjectId")
                        .HasColumnType("integer")
                        .HasColumnName("tegrsu_subject_id");

                    b.Property<int?>("TegrsuTeacherId")
                        .HasColumnType("integer")
                        .HasColumnName("tegrsu_teacher_id");

                    b.HasKey("TegrsuId")
                        .HasName("tegrsus_pkey");

                    b.ToTable("tegrsus", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.TempDepartament", b =>
                {
                    b.Property<int>("DepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dep_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepId"));

                    b.Property<string>("DepAbb")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("dep_abb");

                    b.Property<string>("DepName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("dep_name");

                    b.HasKey("DepId")
                        .HasName("temp_departaments_pkey");

                    b.ToTable("temp_departaments", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.TempDistribKit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Fac")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("fac");

                    b.Property<string>("Fio")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("fio");

                    b.Property<decimal?>("Gek")
                        .HasColumnType("numeric")
                        .HasColumnName("GEK");

                    b.Property<string>("Kaf")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("kaf");

                    b.Property<decimal?>("Lab")
                        .HasColumnType("numeric")
                        .HasColumnName("lab");

                    b.Property<decimal?>("Lec")
                        .HasColumnType("numeric")
                        .HasColumnName("lec");

                    b.Property<decimal?>("Practice")
                        .HasColumnType("numeric")
                        .HasColumnName("practice");

                    b.Property<decimal?>("Sem")
                        .HasColumnType("numeric")
                        .HasColumnName("sem");

                    b.Property<decimal?>("Sem1")
                        .HasColumnType("numeric")
                        .HasColumnName("sem1");

                    b.Property<decimal?>("Sem2")
                        .HasColumnType("numeric")
                        .HasColumnName("sem2");

                    b.Property<decimal?>("Vkr")
                        .HasColumnType("numeric")
                        .HasColumnName("VKR");

                    b.HasKey("Id")
                        .HasName("temp_distrib_KIT_pkey");

                    b.ToTable("temp_distrib_KIT", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.TempFacName", b =>
                {
                    b.Property<int>("FacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("fac_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FacId"));

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("full_name");

                    b.Property<string>("ShortName")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("short_name");

                    b.HasKey("FacId")
                        .HasName("temp_fac_names_pkey");

                    b.ToTable("temp_fac_names", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.TempItogVo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CheckPlagVkr")
                        .HasColumnType("numeric")
                        .HasColumnName("checkPlagVKR");

                    b.Property<decimal?>("ConsEx")
                        .HasColumnType("numeric")
                        .HasColumnName("cons_ex");

                    b.Property<decimal?>("ConsZfo")
                        .HasColumnType("numeric")
                        .HasColumnName("cons_zfo");

                    b.Property<decimal?>("ControlWork")
                        .HasColumnType("numeric")
                        .HasColumnName("control_work");

                    b.Property<decimal?>("DefVkr")
                        .HasColumnType("numeric")
                        .HasColumnName("defVKR");

                    b.Property<string>("Dep")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("dep");

                    b.Property<decimal?>("ExSpeak")
                        .HasColumnType("numeric")
                        .HasColumnName("ex_speak");

                    b.Property<decimal?>("ExWr")
                        .HasColumnType("numeric")
                        .HasColumnName("ex_wr");

                    b.Property<string>("Fac")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("fac");

                    b.Property<decimal?>("Gosexam")
                        .HasColumnType("numeric")
                        .HasColumnName("GOSexam");

                    b.Property<decimal?>("LabBudj")
                        .HasColumnType("numeric")
                        .HasColumnName("lab_budj");

                    b.Property<decimal?>("LabDogovor")
                        .HasColumnType("numeric")
                        .HasColumnName("lab_dogovor");

                    b.Property<decimal?>("LekBudj")
                        .HasColumnType("numeric")
                        .HasColumnName("lek_budj");

                    b.Property<decimal?>("LekDogovor")
                        .HasColumnType("numeric")
                        .HasColumnName("lek_dogovor");

                    b.Property<decimal?>("Manag")
                        .HasColumnType("numeric")
                        .HasColumnName("manag");

                    b.Property<decimal?>("ManageVkr")
                        .HasColumnType("numeric")
                        .HasColumnName("manageVKR");

                    b.Property<decimal?>("NormContVkr")
                        .HasColumnType("numeric")
                        .HasColumnName("normContVKR");

                    b.Property<decimal?>("PBudg")
                        .HasColumnType("numeric")
                        .HasColumnName("p_budg");

                    b.Property<decimal?>("PDogovor")
                        .HasColumnType("numeric")
                        .HasColumnName("p_dogovor");

                    b.Property<decimal?>("Practice")
                        .HasColumnType("numeric")
                        .HasColumnName("practice");

                    b.Property<decimal?>("RecVkr")
                        .HasColumnType("numeric")
                        .HasColumnName("recVKR");

                    b.Property<string>("Years")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("years");

                    b.Property<decimal?>("ZachetH")
                        .HasColumnType("numeric")
                        .HasColumnName("zachet_h");

                    b.HasKey("Id")
                        .HasName("temp_itogVO_pkey");

                    b.ToTable("temp_itogVO", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.TempOfoVo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeNapr")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("code_napr");

                    b.Property<decimal?>("ConsEx")
                        .HasColumnType("numeric")
                        .HasColumnName("cons_ex");

                    b.Property<string>("Dep")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("dep");

                    b.Property<string>("DisName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("dis_name");

                    b.Property<decimal?>("ExSpeak")
                        .HasColumnType("numeric")
                        .HasColumnName("ex_speak");

                    b.Property<decimal?>("ExWr")
                        .HasColumnType("numeric")
                        .HasColumnName("ex_wr");

                    b.Property<string>("Fac")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("fac");

                    b.Property<int?>("KontBudg")
                        .HasColumnType("integer")
                        .HasColumnName("kont_budg");

                    b.Property<int?>("KontDog")
                        .HasColumnType("integer")
                        .HasColumnName("kont_dog");

                    b.Property<int?>("Kurs")
                        .HasColumnType("integer")
                        .HasColumnName("kurs");

                    b.Property<decimal?>("LabBudj")
                        .HasColumnType("numeric")
                        .HasColumnName("lab_budj");

                    b.Property<decimal?>("LabDogovor")
                        .HasColumnType("numeric")
                        .HasColumnName("lab_dogovor");

                    b.Property<decimal?>("LekBudj")
                        .HasColumnType("numeric")
                        .HasColumnName("lek_budj");

                    b.Property<decimal?>("LekDogovor")
                        .HasColumnType("numeric")
                        .HasColumnName("lek_dogovor");

                    b.Property<int?>("NumberOfGroups")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_groups");

                    b.Property<int?>("NumberOfStreams")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_streams");

                    b.Property<int?>("NumberOfSubgroups")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_subgroups");

                    b.Property<decimal?>("PBudg")
                        .HasColumnType("numeric")
                        .HasColumnName("p_budg");

                    b.Property<decimal?>("PDogovor")
                        .HasColumnType("numeric")
                        .HasColumnName("p_dogovor");

                    b.Property<decimal?>("Practice")
                        .HasColumnType("numeric")
                        .HasColumnName("practice");

                    b.Property<decimal?>("ZachetH")
                        .HasColumnType("numeric")
                        .HasColumnName("zachet_h");

                    b.HasKey("Id")
                        .HasName("temp_OFO_VO_pkey");

                    b.ToTable("temp_OFO_VO", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.TempPractice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("BudgH")
                        .HasColumnType("numeric")
                        .HasColumnName("budg_h");

                    b.Property<string>("Dep")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("dep");

                    b.Property<decimal?>("DogH")
                        .HasColumnType("numeric")
                        .HasColumnName("dog_h");

                    b.Property<string>("Fac")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("fac");

                    b.Property<int?>("Kurs")
                        .HasColumnType("integer")
                        .HasColumnName("kurs");

                    b.Property<string>("Napr")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("napr");

                    b.Property<int?>("NumberOfGroups")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_groups");

                    b.Property<int?>("NumberOfSubgroups")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_subgroups");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_weeks");

                    b.Property<int?>("NumberOfWorkDays")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_work_days");

                    b.Property<string>("PracticeName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("practice_name");

                    b.Property<string>("Profile")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("profile");

                    b.Property<int?>("Semestr")
                        .HasColumnType("integer")
                        .HasColumnName("semestr");

                    b.Property<string>("Srok")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("srok");

                    b.Property<int?>("StudentsBudg")
                        .HasColumnType("integer")
                        .HasColumnName("students_budg");

                    b.Property<int?>("StudentsDog")
                        .HasColumnType("integer")
                        .HasColumnName("students_dog");

                    b.Property<string>("Years")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("years");

                    b.HasKey("Id")
                        .HasName("temp_practice_pkey");

                    b.ToTable("temp_practice", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.TempProffesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Dep")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("dep");

                    b.Property<string>("Fac")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("fac");

                    b.Property<string>("Kval")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("kval");

                    b.Property<string>("Napr")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("napr");

                    b.Property<string>("Proffesions")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("proffesions");

                    b.Property<string>("Profile")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("profile");

                    b.Property<int?>("Srok")
                        .HasColumnType("integer")
                        .HasColumnName("srok");

                    b.HasKey("Id")
                        .HasName("temp_proffesions_pkey");

                    b.ToTable("temp_proffesions", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.TempSostav", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Deg")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("deg");

                    b.Property<string>("Dep")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("dep");

                    b.Property<string>("Dolj")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("dolj");

                    b.Property<string>("Fac")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("fac");

                    b.Property<string>("Name1")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name1");

                    b.Property<string>("Name2")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name2");

                    b.Property<string>("Name3")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name3");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("temp_sostav_pkey");

                    b.ToTable("temp_sostav", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.TempSostavTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Deg")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("deg");

                    b.Property<string>("Dep")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("dep");

                    b.Property<string>("Dolj")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("dolj");

                    b.Property<string>("Fac")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("fac");

                    b.Property<string>("Name1")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name1");

                    b.Property<string>("Name2")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name2");

                    b.Property<string>("Name3")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name3");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("temp_sostav_test_pkey");

                    b.ToTable("temp_sostav_test", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.TempTaskType", b =>
                {
                    b.Property<string>("Dep")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("dep");

                    b.Property<string>("Fac")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("fac");

                    b.Property<string>("Kval")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("kval");

                    b.Property<string>("Napr")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("napr");

                    b.Property<string>("Profile")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("profile");

                    b.Property<int?>("Srok")
                        .HasColumnType("integer")
                        .HasColumnName("srok");

                    b.Property<string>("TaskType")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("task_type");

                    b.ToTable("temp_task_type", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.TempTeachGruz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeNapr")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("code_napr");

                    b.Property<decimal?>("ConsultH")
                        .HasColumnType("numeric")
                        .HasColumnName("consult_h");

                    b.Property<decimal?>("ControlH")
                        .HasColumnType("numeric")
                        .HasColumnName("control_h");

                    b.Property<string>("Dep")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("dep");

                    b.Property<string>("DisName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("dis_name");

                    b.Property<decimal?>("ExamH")
                        .HasColumnType("numeric")
                        .HasColumnName("exam_h");

                    b.Property<string>("Fac")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("fac");

                    b.Property<string>("Fam")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("fam");

                    b.Property<decimal?>("GekH")
                        .HasColumnType("numeric")
                        .HasColumnName("GEK_h");

                    b.Property<int?>("KontBudg")
                        .HasColumnType("integer")
                        .HasColumnName("kont_budg");

                    b.Property<int?>("KontDog")
                        .HasColumnType("integer")
                        .HasColumnName("kont_dog");

                    b.Property<int?>("Kurs")
                        .HasColumnType("integer")
                        .HasColumnName("kurs");

                    b.Property<decimal?>("KursachH")
                        .HasColumnType("numeric")
                        .HasColumnName("kursach_h");

                    b.Property<decimal?>("LabH")
                        .HasColumnType("numeric")
                        .HasColumnName("lab_h");

                    b.Property<decimal?>("LecH")
                        .HasColumnType("numeric")
                        .HasColumnName("lec_h");

                    b.Property<decimal?>("MagistrH")
                        .HasColumnType("numeric")
                        .HasColumnName("magistr_h");

                    b.Property<decimal?>("ManageH")
                        .HasColumnType("numeric")
                        .HasColumnName("manage_h");

                    b.Property<int?>("NumberOfGroups")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_groups");

                    b.Property<int?>("NumberOfStreams")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_streams");

                    b.Property<int?>("NumberOfSubgroups")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_subgroups");

                    b.Property<decimal?>("OtherH")
                        .HasColumnType("numeric")
                        .HasColumnName("other_h");

                    b.Property<decimal?>("PracticeH")
                        .HasColumnType("numeric")
                        .HasColumnName("practice_h");

                    b.Property<int?>("Semestr")
                        .HasColumnType("integer")
                        .HasColumnName("semestr");

                    b.Property<decimal?>("SeminarH")
                        .HasColumnType("numeric")
                        .HasColumnName("seminar_h");

                    b.Property<decimal?>("VkrH")
                        .HasColumnType("numeric")
                        .HasColumnName("VKR_h");

                    b.Property<decimal?>("ZachetH")
                        .HasColumnType("numeric")
                        .HasColumnName("zachet_h");

                    b.HasKey("Id")
                        .HasName("temp_teach_gruz_pkey");

                    b.ToTable("temp_teach_gruz", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Tsch", b =>
                {
                    b.Property<int>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("t_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TId"));

                    b.Property<int?>("DayId")
                        .HasColumnType("integer")
                        .HasColumnName("day_id");

                    b.Property<string>("DisName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("dis_name");

                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("teacher_id");

                    b.Property<string>("Time")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("time");

                    b.HasKey("TId")
                        .HasName("tsch_pkey");

                    b.HasIndex("DayId");

                    b.HasIndex("TeacherId");

                    b.ToTable("tsch", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Workload", b =>
                {
                    b.Property<int>("WlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("wl_id")
                        .HasDefaultValueSql("nextval('workload_seq'::regclass)");

                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("subject_id");

                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("teacher_id");

                    b.HasKey("WlId")
                        .HasName("workload_pkey");

                    b.HasIndex("GroupId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("workload", (string)null);
                });

            modelBuilder.Entity("SuperHeroAPI.Models.Role", b =>
                {
                    b.HasOne("SuperHeroAPI.Models.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Contract", b =>
                {
                    b.HasOne("SuperHeroAPI.md2.LGroup", "GroupToMoveNavigation")
                        .WithMany("Contracts")
                        .HasForeignKey("GroupToMove")
                        .HasConstraintName("gr_id");

                    b.HasOne("SuperHeroAPI.md2.Listener", "Listener")
                        .WithMany("Contracts")
                        .HasForeignKey("ListenerId")
                        .HasConstraintName("lr_id");

                    b.Navigation("GroupToMoveNavigation");

                    b.Navigation("Listener");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.CourseWork", b =>
                {
                    b.HasOne("SuperHeroAPI.md2.Departament", "CourseWorkKafedraNavigation")
                        .WithMany("CourseWorks")
                        .HasForeignKey("CourseWorkKafedra")
                        .HasConstraintName("fk_kafedra");

                    b.HasOne("SuperHeroAPI.md2.Student", "CourseWorkStudent")
                        .WithMany("CourseWorks")
                        .HasForeignKey("CourseWorkStudentId")
                        .HasConstraintName("fk_std");

                    b.HasOne("SuperHeroAPI.md2.Teacher", "CourseWorkTeacher")
                        .WithMany("CourseWorks")
                        .HasForeignKey("CourseWorkTeacherId")
                        .HasConstraintName("fk_teacher");

                    b.Navigation("CourseWorkKafedraNavigation");

                    b.Navigation("CourseWorkStudent");

                    b.Navigation("CourseWorkTeacher");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Group", b =>
                {
                    b.HasOne("SuperHeroAPI.md2.Direction", "GroupDir")
                        .WithMany("Groups")
                        .HasForeignKey("GroupDirId")
                        .HasConstraintName("fk_dir");

                    b.HasOne("SuperHeroAPI.md2.Profile", "GroupProf")
                        .WithMany("Groups")
                        .HasForeignKey("GroupProfId")
                        .HasConstraintName("fk_main");

                    b.Navigation("GroupDir");

                    b.Navigation("GroupProf");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.LGroupsDay", b =>
                {
                    b.HasOne("SuperHeroAPI.md2.LGroup", "LGroupsNavigation")
                        .WithMany("LGroupsDays")
                        .HasForeignKey("LGroups")
                        .HasConstraintName("l_groups");

                    b.Navigation("LGroupsNavigation");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Profile", b =>
                {
                    b.HasOne("SuperHeroAPI.md2.Direction", "ProfDir")
                        .WithMany("Profiles")
                        .HasForeignKey("ProfDirId")
                        .HasConstraintName("pr_dir_id");

                    b.Navigation("ProfDir");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Schedule", b =>
                {
                    b.HasOne("SuperHeroAPI.md2.Auditorium", "Aud")
                        .WithMany("Schedules")
                        .HasForeignKey("AudId")
                        .IsRequired()
                        .HasConstraintName("schedule_aud_id_fkey");

                    b.HasOne("SuperHeroAPI.md2.Day", "Day")
                        .WithMany("Schedules")
                        .HasForeignKey("DayId")
                        .HasConstraintName("schedule_day_id_fkey");

                    b.HasOne("SuperHeroAPI.md2.Group", "Group")
                        .WithMany("Schedules")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("schedule_group_id_fkey");

                    b.HasOne("SuperHeroAPI.md2.Subject", "Subject")
                        .WithMany("Schedules")
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("schedule_subject_id_fkey");

                    b.HasOne("SuperHeroAPI.md2.Teacher", "Teacher")
                        .WithMany("Schedules")
                        .HasForeignKey("TeacherId")
                        .IsRequired()
                        .HasConstraintName("schedule_teacher_id_fkey");

                    b.Navigation("Aud");

                    b.Navigation("Day");

                    b.Navigation("Group");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Student", b =>
                {
                    b.HasOne("SuperHeroAPI.md2.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("fk_group");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Teachschedule", b =>
                {
                    b.HasOne("SuperHeroAPI.md2.Day", "Day")
                        .WithMany("Teachschedules")
                        .HasForeignKey("DayId")
                        .HasConstraintName("teachschedule_day_id_fkey");

                    b.HasOne("SuperHeroAPI.md2.Workload", "Wl")
                        .WithMany("Teachschedules")
                        .HasForeignKey("WlId")
                        .IsRequired()
                        .HasConstraintName("teachschedule_wl_id_fkey");

                    b.Navigation("Day");

                    b.Navigation("Wl");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Tsch", b =>
                {
                    b.HasOne("SuperHeroAPI.md2.Day", "Day")
                        .WithMany("Tsches")
                        .HasForeignKey("DayId")
                        .HasConstraintName("tsch_day_id_fkey");

                    b.HasOne("SuperHeroAPI.md2.Teacher", "Teacher")
                        .WithMany("Tsches")
                        .HasForeignKey("TeacherId")
                        .IsRequired()
                        .HasConstraintName("tsch_teacher_id_fkey");

                    b.Navigation("Day");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Workload", b =>
                {
                    b.HasOne("SuperHeroAPI.md2.Group", "Group")
                        .WithMany("Workloads")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("workload_group_id_fkey");

                    b.HasOne("SuperHeroAPI.md2.Subject", "Subject")
                        .WithMany("Workloads")
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("workload_subject_id_fkey");

                    b.HasOne("SuperHeroAPI.md2.Teacher", "Teacher")
                        .WithMany("Workloads")
                        .HasForeignKey("TeacherId")
                        .IsRequired()
                        .HasConstraintName("workload_teacher_id_fkey");

                    b.Navigation("Group");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SuperHeroAPI.Models.User", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Auditorium", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Day", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("Teachschedules");

                    b.Navigation("Tsches");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Departament", b =>
                {
                    b.Navigation("CourseWorks");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Direction", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Group", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("Students");

                    b.Navigation("Workloads");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.LGroup", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("LGroupsDays");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Listener", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Profile", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Student", b =>
                {
                    b.Navigation("CourseWorks");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Subject", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("Workloads");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Teacher", b =>
                {
                    b.Navigation("CourseWorks");

                    b.Navigation("Schedules");

                    b.Navigation("Tsches");

                    b.Navigation("Workloads");
                });

            modelBuilder.Entity("SuperHeroAPI.md2.Workload", b =>
                {
                    b.Navigation("Teachschedules");
                });
#pragma warning restore 612, 618
        }
    }
}
